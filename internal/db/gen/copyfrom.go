// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package dao

import (
	"context"
)

// iteratorForCreateSteps implements pgx.CopyFromSource.
type iteratorForCreateSteps struct {
	rows                 []CreateStepsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateSteps) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateSteps) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ExternalID,
		r.rows[0].StepNumber,
		r.rows[0].MailSubject,
		r.rows[0].MailContent,
		r.rows[0].SequenceID,
	}, nil
}

func (r iteratorForCreateSteps) Err() error {
	return nil
}

func (q *Queries) CreateSteps(ctx context.Context, arg []CreateStepsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"steps"}, []string{"external_id", "step_number", "mail_subject", "mail_content", "sequence_id"}, &iteratorForCreateSteps{rows: arg})
}
